---
title: "Class 3"
author: "Sean Westwood"
format:
  pdf
---

```{r setup, echo=F}
library(knitr)
library(formatR)
opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
knitr::opts_chunk$set(error = TRUE)
```

#### Plan
* Correlation and Causation
* Logical tests and logical operators

# An experimental example

Does racial discrimination exist in the labor market? Or, should racial disparities in the unemployment rate be attributed to other factors such as racial gaps in educational attainment? To answer this question, two social scientists conducted the following experiment.

In response to newspaper ads, the researchers sent out resumes of fictitious job candidates to potential employers. They varied only the names of the job applicants while leaving the other information in the resumes unchanged. For some resumes, stereotypically black-sounding names such as Lakisha Washington or Jamal Jones were used, whereas other resumes contained typically white-sounding names such as Emily Walsh or Greg Baker. The researchers then compared the callback rates between these two groups of resumes and examined whether the resumes with typical black names received fewer callbacks than those with stereotypically white names. The positions to which the applications were sent were either in sales, administrative support, clerical, or customer services.

| Name      | Description                                 |
|-----------|---------------------------------------------|
| firstname | first name of fictitious job applicant      |
| sex       | sex of applicant (female or male)           |
| race      | race of applicant (black or white)          |
| call      | whether a callback was made (1= yes, 0= no) |

```{r}
resume <- read.csv("resume.csv")
```

## Summarizing variables

We want to know if race had a relationship with the likelihood of getting a callback.  We will use a two-way *contingency table* via the *table()* function to look for this relationship.  A contingency table shows us the number of rows (observations) at each level (value) of two variables

```{r}

```

Repeat this for sex and callback
```{r}

```

Now, let's calculate the average callback rate for all contacts made 
```{r}

```

## Subsetting in R

But what we really want to know is if there is a difference between the average callback rate for Whites and the average callback rate for Blacks.  

### A syntax for selecting specific rows from a dataframe

If a condition we specify is TRUE, then use data from the row.  If that same condition is False, then don't use data from the row. 

Two new operands:  
| means 'or'  
& means 'and' 

But we often want to subset on multiple criteria.  To do this we need to tell R how to handle multiple criteria: must both be TRUE or just one?  

Consider the following:

FALSE & TRUE  
TRUE & TRUE  
TRUE | FALSE  
FALSE | FALSE  
TRUE & FALSE & TRUE  

(TRUE | FALSE) & FALSE   
TRUE | (FALSE & FALSE)   

Which are true and which are false?

```{r}

```

It is often the case that we want to select ranges of values.  For example, we might want to look at the number of people who are under the age of 18.

#### Relational operators

```{r}
# <   
# >   
# <=   
# >=  
# ==  
# !=  
```

1. Create a new vector with the values between -10 and 10.
```{r}

```

2. Test if the first value in the vector is greater than the last. Continue to work through all six operators.
```{r}

```

3. We can combine relational and logical operators.  Test if the fifth value in the vector and the eleventh value is greater than 0.  Less than 0?  

```{r}

```

### Using logical operators to subset data

We want to select just the rows where a certain value is true.  There are 4870 observations in the resume dataset.  If we want to pick just the rows with White names we need to create a vector of 4870 TRUE or FALSE values.  Luckily, R makes this easy.  We can put the logical test within an index command.

1. Create a new vector with callback information for whites and one for blacks.
```{r}

```

2.  Now take the mean for whites and blacks.  

Note: the mean of a binary variable (one taking only values of 0 or 1) gives the proportion of observations taking the value of 1.
```{r}

```

3. We just created vectors of a single variable, but we often want to work with all of the variables for rows that meet certain conditions.  The syntax for selecting all columns into a new dataframe is slightly different (and a bit odd).  

We will not use the *$* operator to specify a single variable.  Instead, we will add to the indexing command.  When indexing we can select by columns and rows.  Consider the following:
```{r}
a <- c(1,2,3,4,5,6)
b <- c("a","b","c","d","e","f")
dummy.dataframe <- as.data.frame(cbind(a,b))
```

Select the first value from the first column

```{r}

```

Select the third value from the second column
```{r}

```

We can think of indexing as kind of a coordinate system.  That is, we can select columns (or rows) with a numeric value.  However, if we want all columns (or rows) we ironically insert a comma with nothing more.  Select values for both columns for the third row.

```{r}

```

4. Select just rows where the candidate was a black male

```{r}

```

## An application: Health Savings Experiments

To understand why the poor are constrained in their ability to save for investments in preventative health products, two researchers designed a field experiment in rural Kenya in which they randomly varied access to four innovative saving technologies. By observing the impact of these various technologies on asset accumulation, and by examining which types of people benefit most from them, the researchers were able to identify the key barriers to saving.  This exercise is based on: 

Dupas, Pascaline and Jonathan Robinson. 2013. "[Why Don't the Poor Save More? Evidence from Health Savings Experiments.](http://dx.doi.org/10.1257/aer.103.4.1138)" *American Economic Review*, Vol. 103, No. 4, pp. 1138-1171.

They worked with 113 ROSCAs (Rotating Savings and Credit Associations). A ROSCA is a group of individuals who come together and make regular cyclical contributions to a fund (called the “pot”), which is then given as a lump sum to one member in each cycle. In their experiment, Dupas and Robinson randomly assigned 113 ROSCAs to one of the five study arms. In this exercise, we will focus on three study arms (one control and two treatment arms). The data file, `rosca.csv` is extracted from their original data, excluding individuals who have received multiple treatments for the sake of simplicity.

Individuals in all study arms were encouraged to save for health and were asked to set a health goal for themselves at the beginning of the study.  In the first treatment group (*Safe Box*), respondents were given a box locked with a padlock, and the key to the padlock was provided to the participants. They were asked to record what health product they were saving for and its cost. This treatment is designed to estimate the effect of having a safe and designated storage technology for preventative health savings.  

In the second treatment group (*Locked Box*), respondents were given a locked box, but not the key to the padlock. The respondents were instructed to call the program officer once they had reached their saving goal, and the program officer would then meet the participant and open the *Locked Box* at the shop where the product is purchased. Compared to the safe box, the locked box offered stronger commitment through earmarking (the money saved could only be used for the prespecified purpose). 

Participants are interviewed again 6 months and 12 months later. In this exercise, our outcome of interest is the amount (in Kenyan shilling) spent on preventative health products after 12 months.

Descriptions of the relevant variables in the data file `rosca.csv` are:

| Name           | Description                                                     |
|----------------|-----------------------------------------------------------------|
| bg_female      | 1 if female, and 0 otherwise                                    |
| bg_married     | 1 if married, and 0 otherwise                                   |
| bg_b1_age      | age at baseline                                                 |
| encouragement  | 1 if encouragement only (control group), and 0 otherwise        |
| safe_box       | 1 if safe box treatment, and 0 otherwise                        |
| locked_box     | 1 if lock box treatment, and 0 otherwise                        |
| fol2_amtinvest | Amount invested in health products                              |
| has_followup2  | 1 if appears in 2nd followup (after 12 months), and 0 otherwise |
 
1.1. Load the data set and create a single variable *treatment* that takes the value "control" if receiving only encouragement, "safebox" if receiving a safe box,  and "lockbox"" if receiving a locked box. 

```{r}
rosca <- read.csv("rosca.csv")
```

1.2. How many individuals are in the control group? How many individuals are in each of the treatment two treatment groups?
```{r}

```

2.1. Subset the data so that it contains only participants who were interviewed in the second followup `has_followup2` = 1.  
```{r}

```

2.2. How many participants are in this subset?  
```{r}

```

2.3. Calculate the drop-out rate in the treatment conditions?  
```{r}

```

2.4. What does this result suggest?
## Evaluation

1. On a scale ranging between 1 (Too Hard) and 10 (Too Easy), how was today's class: 
2. What was the easiest thing to understand?
3. What was the most difficult thing to understand?
4. How long did you spend on the assignment outside of class?
